/**
 * Do it! 자료구조와 함께 배우는 알고리즘 입문
 * 김재익(jack0608)
 * chap01 기본 알고리즘
 */

package chap01;

// java.util 패키지에 있는 Scanner 클래스를 프로그램에 포함
import java.util.Scanner;

class Max3 
{
	static int max3(int a, int b, int c)
	{
		int max = a;
		
		if(b > max) max = b;
		if(c > max) max = c;
		
		return max;
	}

	// Q1 네 값의 최댓값을 구하는 max4 메서드를 작성하세요.
	static int max4(int a, int b, int c, int d)
	{
		int max = a;
		
		if(b > max) max = b;
		if(c > max) max = c;
		if(d > max) max = d;
		
		return max;
	}
	
	// Q2 세 값의 최솟값을 구하는 min3 메서드를 작성하세요.
	static int min3(int a, int b, int c)
	{
		int min = a;
		
		if(min > b) min = b;
		if(min > c) min = c;
		
		return min;
	}

	// Q3 네 값의 최솟값을 구하는 min4 메서드를 작성하세요.
	static int min4(int a, int b, int c, int d)
	{
		int min = a;
		
		if(min > b) min = b;
		if(min > c) min = c;
		if(min > d) min = d;
		
		return min;
	}
	
	static int med3(int a, int b, int c)
	{
		int median = 0;
		
		if(a >= b)
		{
			if(b >= c)
			{
				median = b; 
			}
			else if(a <= c)
			{	
				median = a;
			}
			else
			{
				median = c;
			}
		}
		else if(a > c)
		{
			median = a;
		}
		else if(b > c)
		{
			median = c;
		}
		else
		{
			median = b;
		}
		return median;
	}
	
	// Q4 세 값의 대소 관계 13종류의 모든 조합에 대해 중앙값을 구하여 출력하는 프로그램을 작성하세요.
	// 실습 1-2와 동일하게 하는 것이므로... 패스!
	
	// Q5 중앙값을 구하는 메서드는 다음과 같이 작성할 수도 있습니다.
	// 그러나 실습 1C-1의 med3 메서드에 비해 효율이 떨어지는데 그 이유를 설명하시오.
	static int med3_quiz(int a, int b, int c)
	{
		if( (b >= a && c <= a) || (b <= a && c >= a) )
		{
			return a;
		}
		else if( (a > b && c < b) || (a < b && c > b) )
		{
			return b;
		}
		return c;
	}
	/*
	 * A5
	 * 논리연산자는 좌측 부터 검사를 하기 때문에.. 효율이 좋을텐데... 왜 떨어질까..?
	 * 논리연산자를 통해 한꺼번에 검사를 해서 그런거 아닐까..
	 */
	
	static void judgeSign(int a)
	{
		if(a > 0)
		{
			System.out.println("양수");
		}
		else if(a < 0)
		{
			System.out.println("음수");
		}
		else
		{
			System.out.println("0");
		}
	}
	
	static int sum(int a)
	{
		int sum = 0;
		int i = 1;
		
		while (i <= a)
		{
			sum += i;
			i++;
		}
		return sum;
	}
	
	@SuppressWarnings("resource")
	public static void main(String[] args) 
	{
		/*// System.in은 키보드와 연결된 표준 입력 스트림
		Scanner stdIn = new Scanner(System.in);
		
		System.out.println("세 정수의 최댓값을 구합니다");
		
		// nextInt()가 호출되면 키보드로 입력한 정숫값을 얻음
		System.out.print("a value : "); int a = stdIn.nextInt();
		System.out.print("b value : "); int b = stdIn.nextInt();
		System.out.print("c value : "); int c = stdIn.nextInt();*/
		
		int max3 = max3(3, 4, 5);
		System.out.println("max value is : " + max3);
		
		int max4 = max4(3, 4, 5, 6);
		System.out.println("max value is : " + max4);
		
		int min3 = min3(3, 1, 5);
		System.out.println("min value is : " + min3);
		
		int min4 = min4(3, 3, 2, -1);
		System.out.println("min value is : " + min4);
		
		int med3 = med3(3, 1, 2);
		System.out.println("med value is : " + med3);
		
		int med3_quiz = med3_quiz(3, 1, 2);
		System.out.println("med value is : " + med3_quiz);
		
		judgeSign(9);
		judgeSign(-5);
		judgeSign(0);
		
		int sum = sum(10);
		System.out.println("sum is : " + sum);
	}
}
